/* eslint-disable react/no-unknown-property */
/* eslint-disable react/prop-types */
// /* eslint-disable react/no-unknown-property */
// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.3 public/models/66e41b049bfd77dc31d7ef23.glb 
// */

// import React from 'react'
// import { useGraph } from '@react-three/fiber'
// import { useGLTF } from '@react-three/drei'
// import { SkeletonUtils } from 'three-stdlib'

// export function Avatar(props) {
//   const { scene } = useGLTF('models/66e41b049bfd77dc31d7ef23.glb')
//   const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
//   const { nodes, materials } = useGraph(clone)
//   return (
//     <group {...props} dispose={null}>
//       <primitive object={nodes.Hips} />
//       <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
//       <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
//       <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
//       <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
//       <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
//     </group>
//   )
// }

// useGLTF.preload('models/66e41b049bfd77dc31d7ef23.glb')
// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.3 public/models/66e41b049bfd77dc31d7ef23.glb 
// */

import { Canvas } from '@react-three/fiber';
import { OrbitControls } from '@react-three/drei';

const Head = ({ position }) => (
  <mesh position={position}>
    <sphereGeometry args={[0.75, 32, 32]} />
    <meshStandardMaterial color="#ffe0bd" />
  </mesh>
);

const Torso = ({ position }) => (
  <mesh position={position}>
    <cylinderGeometry args={[0.5, 0.5, 1.5, 32]} />
    <meshStandardMaterial color="#87ceeb" />
  </mesh>
);

const Avatar = () => {
  return (
    <Canvas style={{ height: '100vh', background: '#cce7ff' }}>
      <ambientLight intensity={0.5} />
      <pointLight position={[5, 5, 5]} />

      {/* Head */}
      <Head position={[0, 2.5, 0]} />

      {/* Torso */}
      <Torso position={[0, 1, 0]} />

      <OrbitControls />
    </Canvas>
  );
};

export default Avatar;
